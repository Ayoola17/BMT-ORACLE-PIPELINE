version: '3'
services:
  kafka:
    image: docker.io/bitnami/kafka:3.4
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  debezium-source:
    image: debezium/connect:2.4
    depends_on:
      - kafka
      - oracleami
    ports:
      - 8083:8083
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: debezium_config
      OFFSET_STORAGE_TOPIC: debezium_offset
      STATUS_STORAGE_TOPIC: debezium_status
      BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_ADVERTISED_HOST_NAME: debezium-source

    volumes:
      - ./ojdbc8.jar:/kafka/libs/ojdbc8.jar
    


  oracleami:
    build:
      context: .
      dockerfile: Dockerfile.oracle
    container_name: oracleAMI
    environment:
      - ORACLE_SID=ORCLCDB
      - ORACLE_PDB=ORCLPDB1
      - ORACLE_PWD=top_secret
    volumes:
      - oracle-data:/opt/oracle/oradata
    ports:
      - "1521:1521"


  python_app:
    build: . # Build an image using the Dockerfile in the current directory
    volumes:
      - oracle-data:/opt/oracle/oradata
      - .:/app  # Mount the current directory
    working_dir: /app
    depends_on:
      - kafka
      - debezium-source
      - oracleami


volumes:
  kafka_data:
    driver: local
  mysql-data:
    driver: local
  postgres-data:
    driver: local
  oracle-data:
    driver: local

